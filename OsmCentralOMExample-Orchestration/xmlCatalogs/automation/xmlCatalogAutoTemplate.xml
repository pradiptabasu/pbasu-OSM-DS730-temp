<?xml version="1.0" encoding="UTF-8"?>
<catalog xmlns="urn:oasis:names:tc:entity:xmlns:xml:catalog">
    
    <!-- 
        This is a sample xml catalog automatically generated by Design Studio.
        
        Whenever OSM processes a URI or URL that has been specified as part of the OSM model, OSM first attempts to resolve the specified URI/URL
        against the xml catalogs that have been defined. This enables a modeled URI such as http://somewhere.org/something to be replaced at runtime
        with a different url such as http://myhost/something. If used wisely, this feature is incredibly useful to allow URIs that are 
        specified at design time to be modified to adapt to different environments - development vs. test vs. production. In a test environment
        you may want to resolve a URI against a test server, but in a development environment you need it to resolve against a different
        server. Another use case is to for xquery module import statements which at design time need to refer to files in a developers
        local workspace, but at runtime need to refer to files available to the OSM server, typically within the resources directory of a cartridge.
        
        For more informtaion on xml catalogs, please refer to http://www.oasis-open.org/committees/entity/spec-2001-08-06.html
        
        In order to make use of XML Catalog support in OSM, please copy or rename this file under the same directory in 
        which it is currently located (xmlCatalogs/core). The file name may be anything you want so long as it ends in .xml and
        is not the same name as this template file.
        
        You may have multiple XML Catalog files within the xmlCatalogs/core directory. OSM will automatically search for files ending in
        .xml within the xmlCatalogs/core directory and load any such files as xml catalogs. XML Catalogs are system wide entities, which means
        an XML Catalog specified in one cartridge will be used when processing requests for orders on other cartridges. Hence, you will need
        to use XML Catalogs with care to ensure URI/URL naming conventions are established across cartridges.
        
        In addition to the XML Catalog files located in each cartridge's xmlCatalogs/core directory, you may also specify xml catalog files using the
        OSM configuration entry oracle.communications.ordermanagement.util.net.CatalogUriResolver.DefaultXmlCatalogsUris. This enables you to 
        operationally modify how OSM resolves URIs without chaning the contents of a cartridge.
        
        
        While any valid XML Catalog entry may be used, the rewriteURI entry is the most useful for OSM.
        
        The rewriteURI format says whenever OSM processes a URI/URL that starts with a specific string, replace that starting string with an alternate
        string.
        
        For example, the following rewriteURI entry says that whenever OSM sees a URI that starts with "http://example.org/somewhere", it should replace it with
        "http://192.168.0.1/foo". This would result in a URI like "http://example.org/somewhere/myfolder/myfile.txt" to be resolved as
        "http://192.168.0.1/foo/myfolder/myfile.txt". 
        
        <rewriteURI uriStartString="http://example.org/somewhere" rewritePrefix="http://192.168.0.1/foo"/>
        
        Note that the text to search for and the text to replace can be whatever valid URI you would like - it doesn't have to be an ip address or hostname.
        
        In addition to traditional URI schemes such as http, ftp, etc., you may use the "osmmodel" scheme to refer to the contents of OSM cartridge resources
        folders.
        
        For example, the following rewriteURI entry says that whenever OSM sees a URI that starts with "http://example.org/somewhere", it should replace it with
        "osmmodel:///MyCartridge/1.0.0/resources". This would result in a URI like "http://example.org/somewhere/myfolder/myfile.txt" to be resolved as
        "osmmodel:///MyCartridge/1.0.0/resources/myfolder/myfile.txt". 
        
        <rewriteURI uriStartString="http://example.org/somewhere" rewritePrefix="osmmodel:///MyCartridge/1.0.0/resources"/>
        
        This effectively lets you leverage the contents of the resources directory in each OSM cartridge at runtime.
        
        The format of an OSM model schema URI is osmmodel:///<cartridge_name>/<cartridge_version>/resources
        
        In addition, you can refer to the default cartridge version using osmmodel:///<cartridge_name>/default/resources. This enables cartridges
        to refer to resources contained in other cartridges in non-version specific way.
        
    -->
    
</catalog>