<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="http://www.metasolv.com/OMS/AutomationMap/2001/11/23" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:am="http://www.metasolv.com/OMS/AutomationMap/2001/11/23" elementFormDefault="qualified">
  <xs:element name="automationMap">
    <xs:annotation>
      <xs:documentation>An AutomationMap describes a set of automation plugins, which are packaged into an OMS Automation Archive (OAR), so they can be deployed together into OMS.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="version" type="xs:string" minOccurs="0">
          <xs:annotation>
            <xs:documentation>A plugin writer can identify their AutomationMap XML instance with a version id.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element ref="am:annotation" minOccurs="0"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:annotation>
            <xs:documentation>Every plugin that is packaged into this OAR file must have a corresponding element here to describe it.</xs:documentation>
          </xs:annotation>
          <xs:element name="taskAutomator" type="am:AutomationPlugIn">
            <xs:annotation>
              <xs:documentation>The plugin correlates to a TaskContext.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="notificationAutomator" type="am:AutomationPlugIn">
            <xs:annotation>
              <xs:documentation>The plugin correlates to a NotificationContext (or one of its subtypes).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
    <xs:key name="ejbNameKey">
      <xs:selector xpath="*/am:ejbName"/>
      <xs:field xpath="."/>
    </xs:key>
  </xs:element>
  <xs:element name="annotation">
    <xs:annotation>
      <xs:documentation>A plugin writer can annotate the AutomationMap for their own purposes. This element is not used by OMS.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="appinfo" type="xs:anyType"/>
        <xs:element name="documentation" type="xs:anyType"/>
      </xs:choice>
      <xs:attribute name="id" type="xs:ID" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="AutomationPlugIn" abstract="false">
    <xs:annotation>
      <xs:documentation>Abstract base type for automators.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="am:annotation" minOccurs="0"/>
      <xs:element name="pluginJndiName" type="string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>NOTE: This element is deprecated. It is not used from OMS 2.5 on. The JNDI name, where the automator's EJBHome will be deployed by the deploy tool.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ejbName" type="string">
        <xs:annotation>
          <xs:documentation>A unique name for the automation plugin. This will appear in the administrative console as the name of an EJB.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="className" type="string">
        <xs:annotation>
          <xs:documentation>The fully qualified name of the class, which implements the automation plugin.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="runAs" type="string">
        <xs:annotation>
          <xs:documentation>The OMS user name (security principal), whose credentials will be used to execute this automation plugin. A password is not necessary to authenticate this user, because only an administrator will have the authority to deploy components into the server.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="receive" type="am:Receiver">
        <xs:annotation>
          <xs:documentation>Describes where the JMS Message that triggers the creation of this plugin is coming from.  There are two possibilities, the JMS Message can be internal (generated by OMS) or external (generated by some external system).</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="implement" type="am:Implementation" minOccurs="0">
        <xs:annotation>
          <xs:documentation>The implementation code within the plugin can be configured through this extensible element.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Receiver" abstract="true">
    <xs:annotation>
      <xs:documentation>Abstract base type for Recievers.</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="InternalReceiver">
    <xs:annotation>
      <xs:documentation>Used when the JMS Message that triggered the creation of this plugin was generated by OMS.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="am:Receiver">
        <xs:sequence>
          <xs:choice>
            <xs:element name="mnemonic">
              <xs:annotation>
                <xs:documentation>The task mnemonic used by Provisioning to generate messages for this plugin.  IMPORTANT NOTE: This element has been deprecated for use in notificationAutomators.  It is preserved for backward compatibility only.  For notificationAutomators, use the "event" element instead. </xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="254"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="event" type="am:Event">
              <xs:annotation>
                <xs:documentation>Abstract base type for notificationAutomator events.  IMPORTANT NOTE: This element is not valid for taskAutomators.  It is only allowed for taskAutomators by the schema in order to maintain backward compatibility with existing "InternalReceiver" automation map definitions.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
          <xs:element name="executionModes" type="am:listOfExecutionModes" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Specifes the set of task execution modes that apply to this automation plugin. When an instance of a task of one of the specified execution modes is put into received state the plugin will be run. For example, specifying a task execution mode of "do" causes the plugin to be run when an instance of the specified task is created in "do" mode, but the plugin will not be run if the execution mode for the task is undo or redo. Multiple execution modes may be specified, allowing a single plugin to respond to a task for one or more exeuction modes. If this element is omitted, the default value is "do".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="messagePropertySelector" type="string" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Supply a selector based on message properties that will be applied to OMS's internal JMS Queue . Refer to the JMS specification (http://java.sun.com/products/jms/) for the syntax of this selector expression.  The most useful properties for selection are source, type, process and process_status</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ExternalReceiver">
    <xs:annotation>
      <xs:documentation>Used when the JMS Message that triggered the creation of this plugin was generated by an external system.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="am:Receiver">
        <xs:sequence>
          <xs:element name="jmsSource" type="am:MessageReceiver">
            <xs:annotation>
              <xs:documentation>Used to describe which queue or topic the external system will place messages on for this plugin.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="correlation" type="am:Correlation">
            <xs:annotation>
              <xs:documentation>Supply a selector based on message properties. Refer to the JMS specification (http://java.sun.com/products/jms/) for the syntax of this selector expression.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Correlation" abstract="true">
    <xs:annotation>
      <xs:documentation>Abstract base type for correlation.</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="MessagePropertyCorrelation">
    <xs:annotation>
      <xs:documentation>Based on a message from outside OMS, a plugin correlates to the original OMS entity, which initiated the automation, based on a message property.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="am:Correlation">
        <xs:sequence>
          <xs:element name="property" type="string">
            <xs:annotation>
              <xs:documentation>The value found in the message property by this name will be used to correlate to the original OMS entity, which initiated the automation.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="XmlBodyCorrelation">
    <xs:annotation>
      <xs:documentation>Based on a message from outside OMS, a plugin correlates to the original OMS entity, which initiated the automation, based on an element in the XML payload of a message.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="am:Correlation">
        <xs:sequence>
          <xs:element name="select" type="string">
            <xs:annotation>
              <xs:documentation>The value found in the message payload is used to correlate to the original OMS entity, which initiated the automation. The value is selected by applying an XPath to the XML contents of the TextMessage.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TextMessageCorrelation">
    <xs:annotation>
      <xs:documentation>Based on a message from outside OMS, a plugin correlates to the original OMS entity, which initiated the automation, based on a computation that is supplied by the plugin code. The plugin must implement the extractCorrrelationId method.</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <xs:simpleType name="JmsDestinationType">
    <xs:annotation>
      <xs:documentation>JMS Destination types.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="string">
      <xs:enumeration value="javax.jms.Queue"/>
      <xs:enumeration value="javax.jms.Topic"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="JMSDestination">
    <xs:annotation>
      <xs:documentation>A JMS Destination is identified using this type of element.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="jndiName" type="string">
        <xs:annotation>
          <xs:documentation>A JMS Destination will be bound to a JNDI name within the scope of a JNDI provider.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="destinationType" type="am:JmsDestinationType">
        <xs:annotation>
          <xs:documentation>A JMS Destination is either a javax.jms.Queue or a javax.jms.Topic.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="providerUrl" type="anyURI" minOccurs="0">
        <xs:annotation>
          <xs:documentation>###NOT SUPPORTED IN OMS 2.0###The JNDI provider, if it resides in a foreign application server, is identified by a URL.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="initialContextFactory" type="string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>###NOT SUPPORTED IN OMS 2.0###The JNDI provider, if it resides in a foreign application server, may be implemented using an InitialContextFactory class, which is different from the local provider.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="connectionFactory" type="string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>###NOT SUPPORTED IN OMS 2.0###The JMS server, if it resides in a foreign application server, may be implemented using a ConnectionFactory class, which is different from the local JMS server.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="MessageReceiver">
    <xs:annotation>
      <xs:documentation>The plugin receives messages from a JMS Destination that is not owned by OMS. This mechanism allows it to select only matching messages for processing. Non-matching messages are not processed by this plugin. Other message listeners on that JMS Destination are free to process them.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="from" type="am:JMSDestination">
        <xs:annotation>
          <xs:documentation>Identify the JMS Destination to listen for messages.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="messagePropertySelector" type="string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Supply a selector based on message properties. Refer to the JMS specification (http://java.sun.com/products/jms/) for the syntax of this selector expression.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="xmlMessageBodySelector" type="am:XmlMessageBodySelector" minOccurs="0">
        <xs:annotation>
          <xs:documentation>###NOT SUPPORTED IN OMS 2.0### Supply a selector based on applying an XPath expression to the XML context of the TextMessage, and comparing that value with a string value.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="XmlMessageBodySelector">
    <xs:annotation>
      <xs:documentation>Select a value based on XPath expression, and compare that string to determine if the message matches.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="select" type="string">
        <xs:annotation>
          <xs:documentation>An element or attribute from the XML content is selected using an XPath expression. The element or attribute must be of a type that is comparable to a string.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="compare" type="string">
        <xs:annotation>
          <xs:documentation>Compare the selected value form the XML content with this string value.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Implementation" abstract="true">
    <xs:annotation>
      <xs:documentation>Abstract base type for implementation configurations.</xs:documentation>
    </xs:annotation>
    <xs:sequence/>
  </xs:complexType>
  <xs:complexType name="XsltAutomator">
    <xs:complexContent>
      <xs:extension base="am:Implementation">
        <xs:sequence>
          <xs:element name="script" type="am:CachedScriptParameterType">
            <xs:annotation>
              <xs:documentation>The XSLT script to use.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="updateOrder" type="boolean" default="true" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Set to true to indicate to the plugin implementation that the order data should be updated with the result of the transformation (if applicable).  Set to false to indicate to the plugin implementation that the result of the transformation should not be used to update the order data.  This parameter is only relevant for plugins ssociated with an order context.  The value set here may be overridden by the XSLT for instance-specific behavior.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="exception" type="am:TaskStatusType" minOccurs="0">
            <xs:annotation>
              <xs:documentation>The exit status mnemonic that should be used to transition the task when an exception occurs during processing.  This setting is only applicable to plugins that are associated with a task context.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="transformerFactory" type="string" minOccurs="0">
            <xs:annotation>
              <xs:documentation>The fully-qualified class name of the XSLT transformer factory to use.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="XsltSender">
    <xs:complexContent>
      <xs:extension base="am:MessageSender">
        <xs:sequence>
          <xs:element name="script" type="am:CachedScriptParameterType">
            <xs:annotation>
              <xs:documentation>The XSLT script to use.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="exception" type="am:TaskStatusType" minOccurs="0">
            <xs:annotation>
              <xs:documentation>The exit status mnemonic that should be used to transition the task when an exception occurs during processing.  This setting is only applicable to plugins that are associated with a task context.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="transformerFactory" type="string" minOccurs="0">
            <xs:annotation>
              <xs:documentation>The fully-qualified class name of the XSLT transformer factory to use.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="XqueryAutomator">
    <xs:complexContent>
      <xs:extension base="am:Implementation">
        <xs:sequence>
          <xs:element name="script" type="am:CachedScriptParameterType">
            <xs:annotation>
              <xs:documentation>The Xquery script to use.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="updateOrder" type="boolean" default="true" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Set to true to indicate to the plugin implementation that the order data should be updated with the result of the transformation (if applicable).  Set to false to indicate to the plugin implementation that the result of the transformation should not be used to update the order data.  This parameter is only relevant for plugins ssociated with an order context.  The value set here may be overridden by the XSLT for instance-specific behavior.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="exception" type="am:TaskStatusType" minOccurs="0">
            <xs:annotation>
              <xs:documentation>The exit status mnemonic that should be used to transition the task when an exception occurs during processing.  This setting is only applicable to plugins that are associated with a task context.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="XquerySender">
    <xs:complexContent>
      <xs:extension base="am:MessageSender">
        <xs:sequence>
          <xs:element name="script" type="am:CachedScriptParameterType">
            <xs:annotation>
              <xs:documentation>The Xquery script to use.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="exception" type="am:TaskStatusType" minOccurs="0">
            <xs:annotation>
              <xs:documentation>The exit status mnemonic that should be used to transition the task when an exception occurs during processing.  This setting is only applicable to plugins that are associated with a task context.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="MessageSender">
    <xs:annotation>
      <xs:documentation>The AbstractSendAutomator is a type of plugin implementation. It provides a convenient reusable mechanism for sending an XML Request Message to a JMS Destination, according to the OSS through Java design guidelines (http://jcp.org/jsr/design/144.jsp).</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="am:Implementation">
        <xs:sequence>
          <xs:element name="to" type="am:JMSDestination">
            <xs:annotation>
              <xs:documentation>The JMS Destination, where the XML Request message should be sent.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="replyTo" type="am:JMSDestination" minOccurs="0">
            <xs:annotation>
              <xs:documentation>The JMS Destination, where the Response or Exception message should be delivered. Usually another plugin will be configured to receive messages from this Destination, and correlate back to the same OMS entity as this plugin.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="sendNullMessage" type="boolean" default="true" minOccurs="0">
            <xs:annotation>
              <xs:documentation>Determines the MessageSender behavior when a JMS Message to send has no body content. If "true" the JMS Message will be sent (default). If "false" the JMS Message will not be sent. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ScriptParameterType">
    <xs:choice>
      <xs:element name="fileUrl" type="anyURI">
        <xs:annotation>
          <xs:documentation>The URL of the script to run.  Note: this parameter is deprecated.  File-based scripts should be identified using the the "file" element, and URL-based scripts should be identified using the "url" element.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="url" type="xs:anyURI">
        <xs:annotation>
          <xs:documentation>The URL of the script to run.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="file" type="xs:token">
        <xs:annotation>
          <xs:documentation>Absolute path of script in the filesystem.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="resource" type="xs:token">
        <xs:annotation>
          <xs:documentation>Location of script which is in the plugin's CLASSPATH, according to the format specified by java.jang.Class#getResource(String).</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="CachedScriptParameterType">
    <xs:complexContent>
      <xs:extension base="am:ScriptParameterType">
        <xs:sequence>
          <xs:element name="cache" minOccurs="0">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="maxSize" type="positiveInteger" default="50" minOccurs="0">
                  <xs:annotation>
                    <xs:documentation>The maximum number of XSLT template entries that will be cached concurrently.  When the maximum number of cache entries is exceeded, entries are removed on a LRU basis.</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element name="timeout" type="nonNegativeInteger" default="15000" minOccurs="0">
                  <xs:annotation>
                    <xs:documentation>The minimum TTL for a cache entry, in milliseconds.  The entry will be evicted from the cache "timeout" milliseconds after being added.  A value of 0 is interpreted as "no timeout."</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TaskStatusType">
    <xs:sequence>
      <xs:element name="status" type="am:Mnemonic">
        <xs:annotation>
          <xs:documentation>The mnemonic of the task exit status to use when a processing exception occurs.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Event" abstract="true">
    <xs:annotation>
      <xs:documentation>Abstract event type for Notification automators</xs:documentation>
    </xs:annotation>
  </xs:complexType>
  <xs:complexType name="SystemNotification">
    <xs:annotation>
      <xs:documentation>notificationAutomator event descriptor for system notifications.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="am:Event">
        <xs:sequence>
          <xs:element name="mnemonic" type="am:Mnemonic">
            <xs:annotation>
              <xs:documentation>The system notification mnemonic.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OrderNotification">
    <xs:annotation>
      <xs:documentation>notificationAutomator event descriptor for order notifications.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="am:Event">
        <xs:sequence>
          <xs:element name="orderSource" type="am:Mnemonic">
            <xs:annotation>
              <xs:documentation>The order source mnemonic with which the plugin will be associated.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="orderType" type="am:Mnemonic">
            <xs:annotation>
              <xs:documentation>The order type mnemonic with which the plugin will be associated.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="milestone" type="am:Milestone">
            <xs:annotation>
              <xs:documentation>The order milestone with which the plugin will be associated.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TaskNotification">
    <xs:annotation>
      <xs:documentation>notificationAutomator event descriptor for task notifications.</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="am:Event">
        <xs:sequence>
          <xs:element name="mnemonic" type="am:Mnemonic">
            <xs:annotation>
              <xs:documentation>The task mnemonic.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="state" type="am:Mnemonic">
            <xs:annotation>
              <xs:documentation>The task state mnemonic with which the plugin will be associated.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="Milestone">
    <xs:annotation>
      <xs:documentation>Order milestone.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="creation"/>
      <xs:enumeration value="completion"/>
      <xs:enumeration value="deletion"/>
      <xs:enumeration value="state_change"/>
      <xs:enumeration value="exception"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="executionModeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="do">
        <xs:annotation>
          <xs:documentation>The automation plugin will be run when an instance of the task is created in "do" mode.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="redo">
        <xs:annotation>
          <xs:documentation>The automation plugin will be run when an instance of the task is created in "redo" mode.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="undo">
        <xs:annotation>
          <xs:documentation>The automation plugin will be run when an instance of the task is created in "undo" mode.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="listOfExecutionModes">
    <xs:list itemType="am:executionModeType"/>
  </xs:simpleType>
    <xs:simpleType name="Mnemonic">
    <restriction base="xs:NCName">
      <maxLength value="254"/>
    </restriction>
  </xs:simpleType>
</xs:schema>